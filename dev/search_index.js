var documenterSearchIndex = {"docs":
[{"location":"profiles/#Supported-Profiles","page":"Supported Profiles","title":"Supported Profiles","text":"","category":"section"},{"location":"profiles/","page":"Supported Profiles","title":"Supported Profiles","text":"Pages = [\"profiles.md\"]","category":"page"},{"location":"profiles/#YCbCr","page":"Supported Profiles","title":"YCbCr","text":"","category":"section"},{"location":"profiles/#BT.601-625-line","page":"Supported Profiles","title":"BT.601 625-line","text":"","category":"section"},{"location":"profiles/#BT.601-525-line","page":"Supported Profiles","title":"BT.601 525-line","text":"","category":"section"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Module","page":"API Reference","title":"Module","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"YUVColorTypes","category":"page"},{"location":"api/#YUVColorTypes","page":"API Reference","title":"YUVColorTypes","text":"YUVColorTypes\n\nAn add-on libray to ColorTypes supporting YUV-like colors.\n\nType Hierarchy\n\nColorTypes.Color{T,N}\n\nAbstractYUV{T}\nYUV{T,P,U,R,D}\nAbstractLuma{T}\nLuma{T,P,U,R,D}\n\nColorTypes.AlphaColor{C,T,N}\n\nAbstractAYUV{C,T}\nAYUV{T,P,U,R,D}\nAbstractALuma{C,T}\nALuma{T,P,U,R,D}\n\nColorTypes.ColorAlpha{C,T,N}\n\nAbstractYUVA{C,T}\nYUVA{T,P,U,R,D}\nAbstractLumaA{C,T}\nLumaA{T,P,U,R,D}\n\nSupported Profiles\n\nYCbCrBT601_625\nYCbCrBT601_525\n\n\n\n\n\n","category":"module"},{"location":"api/#Basic-Types","page":"API Reference","title":"Basic Types","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"AbstractYUV\nTransparentYUV\nAbstractAYUV\nAbstractYUVA\nAbstractYUVColorant\n\n# AbstractLuma\n# TransparentLuma\n# AbstractALuma\n# AbstractLumaA\n# AbstractLumaColorant\n\nYUVColorTypes.YUV\nYUVColorTypes.AYUV\nYUVColorTypes.YUVA\nYUVColorTypes.Luma\nYUVColorTypes.ALuma\nYUVColorTypes.LumaA","category":"page"},{"location":"api/#YUVColorTypes.AbstractYUV","page":"API Reference","title":"YUVColorTypes.AbstractYUV","text":"AbstractYUV{T} <: Color{T,3}\n\nAn abstract type for opaque YUV-like colors.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.TransparentYUV","page":"API Reference","title":"YUVColorTypes.TransparentYUV","text":"TransparentYUV{C<:AbstractYUV,T} = TransparentColor{C,T,4}\n\nAn alias of abstract type TransparentColor for transparent YUV-like colors.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YUV","page":"API Reference","title":"YUVColorTypes.YUV","text":"YUV{T,P,U,R,D} <: AbsrtractYUV{T}\n\nT: component type\nP: symbol of profile\nU: unsigned chroma components if true\nR: full range if true\nD: bit-depth\n\nSee also AYUV and YUVA for transparent versions, and Luma for the single Y component version.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.AYUV","page":"API Reference","title":"YUVColorTypes.AYUV","text":"AYUV{T,P,U,R,D} <: AbstractAYUV{YUV{T,P,U,R,D},T}\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YUVA","page":"API Reference","title":"YUVColorTypes.YUVA","text":"YUVA{T,P,U,R,D} <: AbstractYUVA{YUV{T,P,U,R,D},T}\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.Luma","page":"API Reference","title":"YUVColorTypes.Luma","text":"Luma{T,P,U,R,D} <: AbstractLuma{T}\n\nThe single Y component, i.e. grayscale version of a YUV-like color.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.ALuma","page":"API Reference","title":"YUVColorTypes.ALuma","text":"ALuma{T,P,U,R,D} <: AbstractALuma{Luma{T,P,U,R,D},T}\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.LumaA","page":"API Reference","title":"YUVColorTypes.LumaA","text":"LumaA{T,P,U,R,DR,} <: AbstractLumaA{YUV{T,P,U,R,D},T}\n\n\n\n\n\n","category":"type"},{"location":"api/#Specific-YCbCr-Types-(Aliases)","page":"API Reference","title":"Specific YCbCr Types (Aliases)","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"YCbCrBT601_625\nYCbCr30BT601_625\nYCbCr24BT601_625\nYCbCr36BT601_625\nYCbCr48BT601_625\nYCbCrBT601_525\nYCbCr30BT601_525\nYCbCr24BT601_525\nYCbCr36BT601_525\nYCbCr48BT601_525","category":"page"},{"location":"api/#YUVColorTypes.YCbCrBT601_625","page":"API Reference","title":"YUVColorTypes.YCbCrBT601_625","text":"YCbCrBT601_625{T,D}\n\nThe 625-line version of BT.601 YCbCr color type (previously designated PAL).\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr30BT601_625","page":"API Reference","title":"YUVColorTypes.YCbCr30BT601_625","text":"YCbCr30BT601_625{T}\n\n10-bit representation of the 625-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 1024).\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr24BT601_625","page":"API Reference","title":"YUVColorTypes.YCbCr24BT601_625","text":"YCbCr24BT601_625{T}\n\n8-bit representation of the 625-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 256). See also YCbCr30BT601_625.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr36BT601_625","page":"API Reference","title":"YUVColorTypes.YCbCr36BT601_625","text":"YCbCr36BT601_625{T}\n\n12-bit representation of the 625-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 4096). See also YCbCr30BT601_625.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr48BT601_625","page":"API Reference","title":"YUVColorTypes.YCbCr48BT601_625","text":"YCbCr48BT601_625{T}\n\n16-bit representation of the 625-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 65536). See also YCbCr30BT601_625.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCrBT601_525","page":"API Reference","title":"YUVColorTypes.YCbCrBT601_525","text":"YCbCrBT601_525{T,D}\n\nThe 525-line version of BT.601 YCbCr color type (previously designated NTSC).\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr30BT601_525","page":"API Reference","title":"YUVColorTypes.YCbCr30BT601_525","text":"YCbCr30BT601_525{T}\n\n10-bit representation of the 525-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 1024).\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr24BT601_525","page":"API Reference","title":"YUVColorTypes.YCbCr24BT601_525","text":"YCbCr24BT601_525{T}\n\n8-bit representation of the 525-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 256). See also YCbCr30BT601_525.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr36BT601_525","page":"API Reference","title":"YUVColorTypes.YCbCr36BT601_525","text":"YCbCr36BT601_525{T}\n\n12-bit representation of the 525-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 4096). See also YCbCr30BT601_525.\n\n\n\n\n\n","category":"type"},{"location":"api/#YUVColorTypes.YCbCr48BT601_525","page":"API Reference","title":"YUVColorTypes.YCbCr48BT601_525","text":"YCbCr48BT601_525{T}\n\n16-bit representation of the 525-line BT.601 YCbCr color type. Its raw components of type T usually have a value in [0, 65536). See also YCbCr30BT601_525.\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions","page":"API Reference","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"luma\nchroma_u\nchroma_v\nchroma_b\nchroma_r\nchroma_g\nchroma_o\nrgb_to_yuv\nsrgb_to_yuv\nyuv_to_rgb\nyuv_to_srgb","category":"page"},{"location":"api/#YUVColorTypes.luma","page":"API Reference","title":"YUVColorTypes.luma","text":"luma(c)\n\nReturn the luma component of a YUV-like color. To avoid confusion, this function does not support ColorTypes.YCbCr and its variants, which are not under the AbstractYUV.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_u","page":"API Reference","title":"YUVColorTypes.chroma_u","text":"chroma_u(c)\n\nReturn the first chroma component of a YUV-like color.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_v","page":"API Reference","title":"YUVColorTypes.chroma_v","text":"chroma_v(c)\n\nReturn the second chroma component of a YUV-like color.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_b","page":"API Reference","title":"YUVColorTypes.chroma_b","text":"chroma_b(c)\n\nReturn the Cb component of a YCbCr color. For general YUV-like colors, use chroma_u. To avoid confusion, this function does not support ColorTypes.YCbCr and its variants, which are not under the AbstractYUV.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_r","page":"API Reference","title":"YUVColorTypes.chroma_r","text":"chroma_r(c)\n\nReturn the Cr component of a YCbCr color. For general YUV-like colors, use chroma_v. To avoid confusion, this function does not support ColorTypes.YCbCr and its variants, which are not under the AbstractYUV.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_g","page":"API Reference","title":"YUVColorTypes.chroma_g","text":"chroma_g(c)\n\nReturn the Cg component of a YCgCo color. For general YUV-like colors, use chroma_u.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.chroma_o","page":"API Reference","title":"YUVColorTypes.chroma_o","text":"chroma_o(c)\n\nReturn the Co component of an YCgCo color. For general YUV-like colors, use chroma_v.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.rgb_to_yuv","page":"API Reference","title":"YUVColorTypes.rgb_to_yuv","text":"rgb_to_yuv(C, rgb::AbstractRGB) -> C\nrgb_to_yuv(C, argb::TransparentRGB) -> C\n\nConvert an RGB color to a YUV color. The color primaries, whitepoint and gamma are depends on the YUV color type. If you need sRGB colors, use yuv_to_srgb or simply use convert or RGB constructors.\n\nSee also srgb_to_yuv and yuv_to_rgb.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.srgb_to_yuv","page":"API Reference","title":"YUVColorTypes.srgb_to_yuv","text":"srgb_to_yuv(C, rgb::AbstractRGB) -> C\nsrgb_to_yuv(C, argb::TransparentRGB) -> C\n\nConvert an sRGB color to a YUV color.\n\nSee also rgb_to_yuv and yuv_to_srgb.\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.yuv_to_rgb","page":"API Reference","title":"YUVColorTypes.yuv_to_rgb","text":"yuv_to_rgb(C, yuv::AbstractYUVColorant) -> C\n\nConvert a YUV color to an RGB color. The color primaries, whitepoint and gamma are depends on the YUV color type. If you need sRGB colors, use yuv_to_srgb or simply use convert or RGB constructors.\n\nSee also yuv_to_srgb and rgb_to_yuv .\n\n\n\n\n\n","category":"function"},{"location":"api/#YUVColorTypes.yuv_to_srgb","page":"API Reference","title":"YUVColorTypes.yuv_to_srgb","text":"yuv_to_srgb(C, yuv::AbstractYUVColorant) -> C\n\nConvert a YUV color to an sRGB color.\n\nSee also yuv_to_rgb and srgb_to_yuv.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#Adding-Profiles","page":"Adding Profiles","title":"Adding Profiles","text":"","category":"section"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"This page describes the internals of YUVColorTypes.jl.","category":"page"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"You can implement the conversion methods such as convert_yuv_to_rgb directly. However, except in the case of nonlinear conversions or speed optimization, the conversion processes are completed simply by defining a profile.","category":"page"},{"location":"addingprofiles/#RGB-color-primaries-and-whitepoint","page":"Adding Profiles","title":"RGB color primaries and whitepoint","text":"","category":"section"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"YUVColorTypes.primary_r\nYUVColorTypes.primary_g\nYUVColorTypes.primary_b\nYUVColorTypes.whitepoint","category":"page"},{"location":"addingprofiles/#YUVColorTypes.primary_r","page":"Adding Profiles","title":"YUVColorTypes.primary_r","text":"primary_r(C) -> xyY{Float64}\n\nReturn the red primary of color type C in xyY where Y is 1.0.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.primary_g","page":"Adding Profiles","title":"YUVColorTypes.primary_g","text":"primary_g(C) -> xyY{Float64}\n\nReturn the green primary of color type C in xyY where Y is 1.0.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.primary_b","page":"Adding Profiles","title":"YUVColorTypes.primary_b","text":"primary_b(C) -> xyY{Float64}\n\nReturn the blue primary of color type C in xyY where Y is 1.0.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.whitepoint","page":"Adding Profiles","title":"YUVColorTypes.whitepoint","text":"whitepoint(C) -> xyY{Float64}\n\nReturn the whitepoint of color type C in `xyY.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#RGB-XYZ-conversion-matrices","page":"Adding Profiles","title":"RGB <-> XYZ conversion matrices","text":"","category":"section"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"YUVColorTypes.mat_rgb_to_xyz\nYUVColorTypes.mat_xyz_to_rgb","category":"page"},{"location":"addingprofiles/#YUVColorTypes.mat_rgb_to_xyz","page":"Adding Profiles","title":"YUVColorTypes.mat_rgb_to_xyz","text":"mat_rgb_to_xyz(C{T}) -> NTuple{3,NTuple{3,F}}\n\nReturn the conversion matrix from CIE XYZ to linear RGB based on C primaries.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.mat_xyz_to_rgb","page":"Adding Profiles","title":"YUVColorTypes.mat_xyz_to_rgb","text":"mat_xyz_to_rgb(C{T}) -> NTuple{3,NTuple{3,F}}\n\nReturn the conversion matrix from linear RGB based on C primaries to CIE XYZ.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#RGB-sRGB-conversion-matrices","page":"Adding Profiles","title":"RGB <-> sRGB conversion matrices","text":"","category":"section"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"YUVColorTypes.mat_rgb_to_srgb\nYUVColorTypes.mat_srgb_to_rgb","category":"page"},{"location":"addingprofiles/#YUVColorTypes.mat_rgb_to_srgb","page":"Adding Profiles","title":"YUVColorTypes.mat_rgb_to_srgb","text":"mat_rgb_to_srgb(C{T}) ->NTuple{3,NTuple{3,F}}\n\nReturn the conversion matrix from linear RGB based on C primaries to linear sRGB.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.mat_srgb_to_rgb","page":"Adding Profiles","title":"YUVColorTypes.mat_srgb_to_rgb","text":"mat_srgb_to_rgb(C{T}) -> NTuple{3,NTuple{3,F}}\n\nReturn the conversion matrix from linear sRGB to linear RGB based on C primaries.\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUV-RGB-conversion-matrices","page":"Adding Profiles","title":"YUV <-> RGB conversion matrices","text":"","category":"section"},{"location":"addingprofiles/#Transfer-functions","page":"Adding Profiles","title":"Transfer functions","text":"","category":"section"},{"location":"addingprofiles/","page":"Adding Profiles","title":"Adding Profiles","text":"YUVColorTypes.eotf\nYUVColorTypes.ieotf","category":"page"},{"location":"addingprofiles/#YUVColorTypes.eotf","page":"Adding Profiles","title":"YUVColorTypes.eotf","text":"eotf(C) -> function\n\nReturn the display EOTF (Electro-Optical Transfer Function) for color type C.\n\nSee also eotf\n\n\n\n\n\n","category":"function"},{"location":"addingprofiles/#YUVColorTypes.ieotf","page":"Adding Profiles","title":"YUVColorTypes.ieotf","text":"ieotf(::Type{C})\n\nReturn the inverse EOTF (Electro-Optical Transfer Function) for color type C. This is sometimes referred to as OETF (Opto-Electronic Transfer Function), but OETF is essentially a camera-side characteristic and is distinct from a display-side characteristic.\n\nSee also eotf\n\n\n\n\n\n","category":"function"},{"location":"#YUVColorTypes","page":"Introduction","title":"YUVColorTypes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package is an add-on to ColorTypes, and supports YUV-like colors.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Unfortunately, the environment surrounding YUV-like colors has historically been confusing. In the first place, there is no consensus on even calling a color with one luminance component and two chroma components a YUV. Therefore, this package aims to handle well-defined and well-formed YUV-like colors in a \"reasonable\" manner.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This package does not provide a public API for the specific storage format of YUV colors. This is because YUV-like images are often used with chroma subsampling (e.g., YUV 4:2:0) and planar formats with channel-separated images.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Also, this package provides limited support for conversion between RGBs and YUVs, and does not provide general color management functionality.","category":"page"},{"location":"#Type-design","page":"Introduction","title":"Type design","text":"","category":"section"},{"location":"#Background","page":"Introduction","title":"Background","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The ColorTypes.jl schemes for handling YUV-like colors include the following problems:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"There are various profiles.\nColorTypes.jl does not provide abstract types for specific color models, except for AbstractRGB.\nYUV-like components are often normalized in the range [0, 256) instead of [0, 1] or [-0.5, 0.5).\nYUV-like components are often handled as integer types, especially UInt8.\nFixedPointNumbers.jl v0.8 does not support unsigned Fixed.\nAlpha component should be normalized in the range [0, 1] like ARGB.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"YUVColorType.jl uses the following strategies to solve or mitigate the above problems.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Use julia's parametric types and CICP (Coding-independent code points).\nAdd some abstract types such as AbstractYUV.\nMake the range depend on bit depth instead of normalizing into [0, 1].\nWhen the component type is an integer type, encode alpha implicitly as Normed.","category":"page"},{"location":"#YUV-type","page":"Introduction","title":"YUV type","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The actual type definition underlying YUVColorTypes is as follows:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"struct YUV{T,P,U,R,D} <: AbstractYUV{T}\n    y::T\n    u::T\n    v::T\nend","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"It is worth noting that while RGB has a single type parameter T which specifies the type of the component, YUV has four additional type parameters.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Be prepared that this type may not work well because some of the downstream packages do not assume color types with type parameters other than the component type T.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In any case, the end-users do not need to be aware of the details of the type implementation, and it is undesirable to write codes relying on the internal implementation, since it may change in the future.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"YUVColorTypes provides several type aliases. For BT.601 625-line, the following type aliases are defined for opaque, i.e., without alpha, YCbCr.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"YCbCrBT601_625\nYCbCr24BT601_625\nYCbCr30BT601_625\nYCbCr36BT601_625\nYCbCr48BT601_625","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The first alias is the basic type for which no bit depth is specified. Subsequent aliases are specified with component bit depths of 8, 10, 12, and 16 bits.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The bit depth specification changes the ranges of possible values for the components. The following five colors are different representations of the same color.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using YUVColorTypes\n\n[\n    YCbCrBT601_625(100, 80, 100),\n    YCbCr24BT601_625(100, 80, 100),\n    YCbCr30BT601_625(400, 320, 400),\n    YCbCr36BT601_625(1600, 1280, 1600),\n    YCbCr48BT601_625(25600, 20480, 25600),\n]","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Note that unlike RGB24, the types with those bit depths are still parametric.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using FixedPointNumbers\n[\n    YCbCr24BT601_625{UInt8}(100, 200, 100), # `UInt8` is the default component type\n    YCbCr24BT601_625{Int}(100, 200, 100),\n    YCbCr24BT601_625{Q11f4}(100.5, 200.5, 100.5),\n    YCbCr24BT601_625{Float32}(100.5, 200.5, 100.5),\n]","category":"page"}]
}
